/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  /* 3 */
  tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

#root :is(.fixed) {
  position: fixed;
}

#root :is(.absolute) {
  position: absolute;
}

#root :is(.relative) {
  position: relative;
}

#root :is(.inset-0) {
  inset: 0px;
}

#root :is(.bottom-full) {
  bottom: 100%;
}

#root :is(.left-0) {
  left: 0px;
}

#root :is(.left-3) {
  left: 0.75rem;
}

#root :is(.right-0) {
  right: 0px;
}

#root :is(.top-0) {
  top: 0px;
}

#root :is(.top-1\/2) {
  top: 50%;
}

#root :is(.z-10) {
  z-index: 10;
}

#root :is(.z-40) {
  z-index: 40;
}

#root :is(.z-50) {
  z-index: 50;
}

#root :is(.mx-2) {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

#root :is(.mx-auto) {
  margin-left: auto;
  margin-right: auto;
}

#root :is(.mb-1) {
  margin-bottom: 0.25rem;
}

#root :is(.mb-12) {
  margin-bottom: 3rem;
}

#root :is(.mb-2) {
  margin-bottom: 0.5rem;
}

#root :is(.mb-3) {
  margin-bottom: 0.75rem;
}

#root :is(.mb-4) {
  margin-bottom: 1rem;
}

#root :is(.mb-6) {
  margin-bottom: 1.5rem;
}

#root :is(.mb-8) {
  margin-bottom: 2rem;
}

#root :is(.ml-1) {
  margin-left: 0.25rem;
}

#root :is(.ml-2) {
  margin-left: 0.5rem;
}

#root :is(.ml-auto) {
  margin-left: auto;
}

#root :is(.mr-2) {
  margin-right: 0.5rem;
}

#root :is(.mr-3) {
  margin-right: 0.75rem;
}

#root :is(.mt-1) {
  margin-top: 0.25rem;
}

#root :is(.mt-12) {
  margin-top: 3rem;
}

#root :is(.mt-2) {
  margin-top: 0.5rem;
}

#root :is(.mt-4) {
  margin-top: 1rem;
}

#root :is(.mt-6) {
  margin-top: 1.5rem;
}

#root :is(.mt-auto) {
  margin-top: auto;
}

#root :is(.block) {
  display: block;
}

#root :is(.inline-block) {
  display: inline-block;
}

#root :is(.inline) {
  display: inline;
}

#root :is(.flex) {
  display: flex;
}

#root :is(.table) {
  display: table;
}

#root :is(.grid) {
  display: grid;
}

#root :is(.hidden) {
  display: none;
}

#root :is(.h-12) {
  height: 3rem;
}

#root :is(.h-16) {
  height: 4rem;
}

#root :is(.h-2) {
  height: 0.5rem;
}

#root :is(.h-3) {
  height: 0.75rem;
}

#root :is(.h-4) {
  height: 1rem;
}

#root :is(.h-5) {
  height: 1.25rem;
}

#root :is(.h-6) {
  height: 1.5rem;
}

#root :is(.h-8) {
  height: 2rem;
}

#root :is(.h-full) {
  height: 100%;
}

#root :is(.max-h-72) {
  max-height: 18rem;
}

#root :is(.max-h-96) {
  max-height: 24rem;
}

#root :is(.max-h-\[80vh\]) {
  max-height: 80vh;
}

#root :is(.min-h-screen) {
  min-height: 100vh;
}

#root :is(.w-12) {
  width: 3rem;
}

#root :is(.w-16) {
  width: 4rem;
}

#root :is(.w-2) {
  width: 0.5rem;
}

#root :is(.w-3) {
  width: 0.75rem;
}

#root :is(.w-4) {
  width: 1rem;
}

#root :is(.w-5) {
  width: 1.25rem;
}

#root :is(.w-6) {
  width: 1.5rem;
}

#root :is(.w-64) {
  width: 16rem;
}

#root :is(.w-8) {
  width: 2rem;
}

#root :is(.w-80) {
  width: 20rem;
}

#root :is(.w-full) {
  width: 100%;
}

#root :is(.min-w-full) {
  min-width: 100%;
}

#root :is(.max-w-2xl) {
  max-width: 42rem;
}

#root :is(.max-w-4xl) {
  max-width: 56rem;
}

#root :is(.max-w-7xl) {
  max-width: 80rem;
}

#root :is(.max-w-md) {
  max-width: 28rem;
}

#root :is(.max-w-xs) {
  max-width: 20rem;
}

#root :is(.flex-1) {
  flex: 1 1 0%;
}

#root :is(.flex-shrink-0) {
  flex-shrink: 0;
}

#root :is(.-translate-y-1\/2) {
  --tw-translate-y: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#root :is(.-rotate-90) {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#root :is(.transform) {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

#root :is(.animate-pulse) {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

#root :is(.cursor-pointer) {
  cursor: pointer;
}

#root :is(.select-none) {
  -webkit-user-select: none;
          user-select: none;
}

#root :is(.grid-cols-1) {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

#root :is(.grid-cols-2) {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

#root :is(.flex-col) {
  flex-direction: column;
}

#root :is(.flex-wrap) {
  flex-wrap: wrap;
}

#root :is(.items-start) {
  align-items: flex-start;
}

#root :is(.items-center) {
  align-items: center;
}

#root :is(.justify-center) {
  justify-content: center;
}

#root :is(.justify-between) {
  justify-content: space-between;
}

#root :is(.gap-1) {
  gap: 0.25rem;
}

#root :is(.gap-2) {
  gap: 0.5rem;
}

#root :is(.gap-3) {
  gap: 0.75rem;
}

#root :is(.gap-4) {
  gap: 1rem;
}

#root :is(.gap-6) {
  gap: 1.5rem;
}

#root :is(.gap-8) {
  gap: 2rem;
}

#root :is(.space-x-1 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-x-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-x-3 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-x-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-x-6 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-x-8 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2rem * var(--tw-space-x-reverse));
  margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}

#root :is(.space-y-1 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-2 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-3 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-4 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-6 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

#root :is(.space-y-8 > :not([hidden]) ~ :not([hidden])) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

#root :is(.divide-y > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

#root :is(.divide-gray-700 > :not([hidden]) ~ :not([hidden])) {
  --tw-divide-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-divide-opacity));
}

#root :is(.overflow-hidden) {
  overflow: hidden;
}

#root :is(.overflow-x-auto) {
  overflow-x: auto;
}

#root :is(.overflow-y-auto) {
  overflow-y: auto;
}

#root :is(.truncate) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

#root :is(.whitespace-nowrap) {
  white-space: nowrap;
}

#root :is(.break-all) {
  word-break: break-all;
}

#root :is(.rounded) {
  border-radius: 0.25rem;
}

#root :is(.rounded-full) {
  border-radius: 9999px;
}

#root :is(.rounded-lg) {
  border-radius: 0.5rem;
}

#root :is(.rounded-xl) {
  border-radius: 0.75rem;
}

#root :is(.rounded-b-lg) {
  border-bottom-right-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}

#root :is(.rounded-t-lg) {
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

#root :is(.border) {
  border-width: 1px;
}

#root :is(.border-b) {
  border-bottom-width: 1px;
}

#root :is(.border-l) {
  border-left-width: 1px;
}

#root :is(.border-l-2) {
  border-left-width: 2px;
}

#root :is(.border-l-4) {
  border-left-width: 4px;
}

#root :is(.border-r) {
  border-right-width: 1px;
}

#root :is(.border-t) {
  border-top-width: 1px;
}

#root :is(.border-blue-500\/20) {
  border-color: rgb(59 130 246 / 0.2);
}

#root :is(.border-gray-200) {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
}

#root :is(.border-gray-400) {
  --tw-border-opacity: 1;
  border-color: rgb(156 163 175 / var(--tw-border-opacity));
}

#root :is(.border-gray-600) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

#root :is(.border-gray-700) {
  --tw-border-opacity: 1;
  border-color: rgb(55 65 81 / var(--tw-border-opacity));
}

#root :is(.border-gray-700\/50) {
  border-color: rgb(55 65 81 / 0.5);
}

#root :is(.border-gray-800) {
  --tw-border-opacity: 1;
  border-color: rgb(31 41 55 / var(--tw-border-opacity));
}

#root :is(.border-green-500) {
  --tw-border-opacity: 1;
  border-color: rgb(34 197 94 / var(--tw-border-opacity));
}

#root :is(.border-green-500\/20) {
  border-color: rgb(34 197 94 / 0.2);
}

#root :is(.border-green-500\/30) {
  border-color: rgb(34 197 94 / 0.3);
}

#root :is(.border-green-700) {
  --tw-border-opacity: 1;
  border-color: rgb(21 128 61 / var(--tw-border-opacity));
}

#root :is(.border-orange-500\/30) {
  border-color: rgb(249 115 22 / 0.3);
}

#root :is(.border-orange-700) {
  --tw-border-opacity: 1;
  border-color: rgb(194 65 12 / var(--tw-border-opacity));
}

#root :is(.border-purple-500\/20) {
  border-color: rgb(168 85 247 / 0.2);
}

#root :is(.border-red-400) {
  --tw-border-opacity: 1;
  border-color: rgb(248 113 113 / var(--tw-border-opacity));
}

#root :is(.border-red-500\/20) {
  border-color: rgb(239 68 68 / 0.2);
}

#root :is(.border-red-500\/30) {
  border-color: rgb(239 68 68 / 0.3);
}

#root :is(.border-red-500\/50) {
  border-color: rgb(239 68 68 / 0.5);
}

#root :is(.border-red-700) {
  --tw-border-opacity: 1;
  border-color: rgb(185 28 28 / var(--tw-border-opacity));
}

#root :is(.border-yellow-700) {
  --tw-border-opacity: 1;
  border-color: rgb(161 98 7 / var(--tw-border-opacity));
}

#root :is(.border-l-blue-500) {
  --tw-border-opacity: 1;
  border-left-color: rgb(59 130 246 / var(--tw-border-opacity));
}

#root :is(.border-l-gray-600) {
  --tw-border-opacity: 1;
  border-left-color: rgb(75 85 99 / var(--tw-border-opacity));
}

#root :is(.bg-black) {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

#root :is(.bg-black\/50) {
  background-color: rgb(0 0 0 / 0.5);
}

#root :is(.bg-blue-400) {
  --tw-bg-opacity: 1;
  background-color: rgb(96 165 250 / var(--tw-bg-opacity));
}

#root :is(.bg-blue-400\/10) {
  background-color: rgb(96 165 250 / 0.1);
}

#root :is(.bg-blue-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(59 130 246 / var(--tw-bg-opacity));
}

#root :is(.bg-blue-500\/10) {
  background-color: rgb(59 130 246 / 0.1);
}

#root :is(.bg-blue-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(37 99 235 / var(--tw-bg-opacity));
}

#root :is(.bg-blue-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 58 138 / var(--tw-bg-opacity));
}

#root :is(.bg-blue-900\/30) {
  background-color: rgb(30 58 138 / 0.3);
}

#root :is(.bg-gray-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

#root :is(.bg-gray-400\/10) {
  background-color: rgb(156 163 175 / 0.1);
}

#root :is(.bg-gray-50) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

#root :is(.bg-gray-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

#root :is(.bg-gray-700) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

#root :is(.bg-gray-700\/30) {
  background-color: rgb(55 65 81 / 0.3);
}

#root :is(.bg-gray-800) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

#root :is(.bg-gray-800\/50) {
  background-color: rgb(31 41 55 / 0.5);
}

#root :is(.bg-gray-800\/80) {
  background-color: rgb(31 41 55 / 0.8);
}

#root :is(.bg-gray-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(17 24 39 / var(--tw-bg-opacity));
}

#root :is(.bg-gray-900\/20) {
  background-color: rgb(17 24 39 / 0.2);
}

#root :is(.bg-gray-900\/30) {
  background-color: rgb(17 24 39 / 0.3);
}

#root :is(.bg-gray-900\/50) {
  background-color: rgb(17 24 39 / 0.5);
}

#root :is(.bg-gray-950) {
  --tw-bg-opacity: 1;
  background-color: rgb(3 7 18 / var(--tw-bg-opacity));
}

#root :is(.bg-green-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity));
}

#root :is(.bg-green-400) {
  --tw-bg-opacity: 1;
  background-color: rgb(74 222 128 / var(--tw-bg-opacity));
}

#root :is(.bg-green-400\/10) {
  background-color: rgb(74 222 128 / 0.1);
}

#root :is(.bg-green-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(34 197 94 / var(--tw-bg-opacity));
}

#root :is(.bg-green-500\/10) {
  background-color: rgb(34 197 94 / 0.1);
}

#root :is(.bg-green-500\/20) {
  background-color: rgb(34 197 94 / 0.2);
}

#root :is(.bg-green-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity));
}

#root :is(.bg-green-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(20 83 45 / var(--tw-bg-opacity));
}

#root :is(.bg-green-900\/20) {
  background-color: rgb(20 83 45 / 0.2);
}

#root :is(.bg-green-900\/30) {
  background-color: rgb(20 83 45 / 0.3);
}

#root :is(.bg-orange-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 237 213 / var(--tw-bg-opacity));
}

#root :is(.bg-orange-400\/10) {
  background-color: rgb(251 146 60 / 0.1);
}

#root :is(.bg-orange-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 115 22 / var(--tw-bg-opacity));
}

#root :is(.bg-orange-500\/10) {
  background-color: rgb(249 115 22 / 0.1);
}

#root :is(.bg-orange-500\/20) {
  background-color: rgb(249 115 22 / 0.2);
}

#root :is(.bg-orange-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(234 88 12 / var(--tw-bg-opacity));
}

#root :is(.bg-orange-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(124 45 18 / var(--tw-bg-opacity));
}

#root :is(.bg-orange-900\/20) {
  background-color: rgb(124 45 18 / 0.2);
}

#root :is(.bg-orange-900\/30) {
  background-color: rgb(124 45 18 / 0.3);
}

#root :is(.bg-purple-400\/10) {
  background-color: rgb(192 132 252 / 0.1);
}

#root :is(.bg-purple-500\/10) {
  background-color: rgb(168 85 247 / 0.1);
}

#root :is(.bg-purple-500\/20) {
  background-color: rgb(168 85 247 / 0.2);
}

#root :is(.bg-purple-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(147 51 234 / var(--tw-bg-opacity));
}

#root :is(.bg-red-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity));
}

#root :is(.bg-red-400) {
  --tw-bg-opacity: 1;
  background-color: rgb(248 113 113 / var(--tw-bg-opacity));
}

#root :is(.bg-red-400\/10) {
  background-color: rgb(248 113 113 / 0.1);
}

#root :is(.bg-red-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(239 68 68 / var(--tw-bg-opacity));
}

#root :is(.bg-red-500\/10) {
  background-color: rgb(239 68 68 / 0.1);
}

#root :is(.bg-red-500\/20) {
  background-color: rgb(239 68 68 / 0.2);
}

#root :is(.bg-red-500\/30) {
  background-color: rgb(239 68 68 / 0.3);
}

#root :is(.bg-red-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

#root :is(.bg-red-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(127 29 29 / var(--tw-bg-opacity));
}

#root :is(.bg-red-900\/20) {
  background-color: rgb(127 29 29 / 0.2);
}

#root :is(.bg-red-900\/30) {
  background-color: rgb(127 29 29 / 0.3);
}

#root :is(.bg-red-900\/50) {
  background-color: rgb(127 29 29 / 0.5);
}

#root :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

#root :is(.bg-yellow-400\/10) {
  background-color: rgb(250 204 21 / 0.1);
}

#root :is(.bg-yellow-500) {
  --tw-bg-opacity: 1;
  background-color: rgb(234 179 8 / var(--tw-bg-opacity));
}

#root :is(.bg-yellow-500\/10) {
  background-color: rgb(234 179 8 / 0.1);
}

#root :is(.bg-yellow-500\/20) {
  background-color: rgb(234 179 8 / 0.2);
}

#root :is(.bg-yellow-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(202 138 4 / var(--tw-bg-opacity));
}

#root :is(.bg-yellow-900) {
  --tw-bg-opacity: 1;
  background-color: rgb(113 63 18 / var(--tw-bg-opacity));
}

#root :is(.bg-yellow-900\/20) {
  background-color: rgb(113 63 18 / 0.2);
}

#root :is(.bg-yellow-900\/30) {
  background-color: rgb(113 63 18 / 0.3);
}

#root :is(.bg-opacity-50) {
  --tw-bg-opacity: 0.5;
}

#root :is(.bg-gradient-to-br) {
  background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
}

#root :is(.bg-gradient-to-r) {
  background-image: linear-gradient(to right, var(--tw-gradient-stops));
}

#root :is(.from-blue-500\/10) {
  --tw-gradient-from: rgb(59 130 246 / 0.1) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(59 130 246 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#root :is(.from-gray-900) {
  --tw-gradient-from: #111827 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(17 24 39 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#root :is(.from-orange-900\/50) {
  --tw-gradient-from: rgb(124 45 18 / 0.5) var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(124 45 18 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#root :is(.from-red-400) {
  --tw-gradient-from: #f87171 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(248 113 113 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#root :is(.via-gray-800) {
  --tw-gradient-to: rgb(31 41 55 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #1f2937 var(--tw-gradient-via-position), var(--tw-gradient-to);
}

#root :is(.to-gray-800) {
  --tw-gradient-to: #1f2937 var(--tw-gradient-to-position);
}

#root :is(.to-gray-900) {
  --tw-gradient-to: #111827 var(--tw-gradient-to-position);
}

#root :is(.to-orange-400) {
  --tw-gradient-to: #fb923c var(--tw-gradient-to-position);
}

#root :is(.to-purple-500\/10) {
  --tw-gradient-to: rgb(168 85 247 / 0.1) var(--tw-gradient-to-position);
}

#root :is(.to-red-900\/50) {
  --tw-gradient-to: rgb(127 29 29 / 0.5) var(--tw-gradient-to-position);
}

#root :is(.bg-clip-text) {
  -webkit-background-clip: text;
          background-clip: text;
}

#root :is(.p-1) {
  padding: 0.25rem;
}

#root :is(.p-2) {
  padding: 0.5rem;
}

#root :is(.p-3) {
  padding: 0.75rem;
}

#root :is(.p-4) {
  padding: 1rem;
}

#root :is(.p-6) {
  padding: 1.5rem;
}

#root :is(.p-8) {
  padding: 2rem;
}

#root :is(.px-1) {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

#root :is(.px-2) {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

#root :is(.px-3) {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

#root :is(.px-4) {
  padding-left: 1rem;
  padding-right: 1rem;
}

#root :is(.px-6) {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

#root :is(.py-1) {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

#root :is(.py-12) {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

#root :is(.py-2) {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

#root :is(.py-20) {
  padding-top: 5rem;
  padding-bottom: 5rem;
}

#root :is(.py-3) {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

#root :is(.py-4) {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

#root :is(.py-6) {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

#root :is(.py-8) {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

#root :is(.pl-10) {
  padding-left: 2.5rem;
}

#root :is(.pr-4) {
  padding-right: 1rem;
}

#root :is(.text-left) {
  text-align: left;
}

#root :is(.text-center) {
  text-align: center;
}

#root :is(.text-right) {
  text-align: right;
}

#root :is(.font-mono) {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

#root :is(.text-2xl) {
  font-size: 1.5rem;
  line-height: 2rem;
}

#root :is(.text-3xl) {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

#root :is(.text-4xl) {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

#root :is(.text-lg) {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

#root :is(.text-sm) {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

#root :is(.text-xl) {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

#root :is(.text-xs) {
  font-size: 0.75rem;
  line-height: 1rem;
}

#root :is(.font-bold) {
  font-weight: 700;
}

#root :is(.font-medium) {
  font-weight: 500;
}

#root :is(.font-semibold) {
  font-weight: 600;
}

#root :is(.uppercase) {
  text-transform: uppercase;
}

#root :is(.italic) {
  font-style: italic;
}

#root :is(.leading-6) {
  line-height: 1.5rem;
}

#root :is(.leading-relaxed) {
  line-height: 1.625;
}

#root :is(.tracking-wider) {
  letter-spacing: 0.05em;
}

#root :is(.text-blue-300) {
  --tw-text-opacity: 1;
  color: rgb(147 197 253 / var(--tw-text-opacity));
}

#root :is(.text-blue-400) {
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / var(--tw-text-opacity));
}

#root :is(.text-blue-500) {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity));
}

#root :is(.text-cyan-400) {
  --tw-text-opacity: 1;
  color: rgb(34 211 238 / var(--tw-text-opacity));
}

#root :is(.text-emerald-400) {
  --tw-text-opacity: 1;
  color: rgb(52 211 153 / var(--tw-text-opacity));
}

#root :is(.text-gray-100) {
  --tw-text-opacity: 1;
  color: rgb(243 244 246 / var(--tw-text-opacity));
}

#root :is(.text-gray-300) {
  --tw-text-opacity: 1;
  color: rgb(209 213 219 / var(--tw-text-opacity));
}

#root :is(.text-gray-400) {
  --tw-text-opacity: 1;
  color: rgb(156 163 175 / var(--tw-text-opacity));
}

#root :is(.text-gray-500) {
  --tw-text-opacity: 1;
  color: rgb(107 114 128 / var(--tw-text-opacity));
}

#root :is(.text-gray-600) {
  --tw-text-opacity: 1;
  color: rgb(75 85 99 / var(--tw-text-opacity));
}

#root :is(.text-gray-900) {
  --tw-text-opacity: 1;
  color: rgb(17 24 39 / var(--tw-text-opacity));
}

#root :is(.text-green-300) {
  --tw-text-opacity: 1;
  color: rgb(134 239 172 / var(--tw-text-opacity));
}

#root :is(.text-green-400) {
  --tw-text-opacity: 1;
  color: rgb(74 222 128 / var(--tw-text-opacity));
}

#root :is(.text-green-500) {
  --tw-text-opacity: 1;
  color: rgb(34 197 94 / var(--tw-text-opacity));
}

#root :is(.text-green-800) {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity));
}

#root :is(.text-orange-300) {
  --tw-text-opacity: 1;
  color: rgb(253 186 116 / var(--tw-text-opacity));
}

#root :is(.text-orange-400) {
  --tw-text-opacity: 1;
  color: rgb(251 146 60 / var(--tw-text-opacity));
}

#root :is(.text-orange-800) {
  --tw-text-opacity: 1;
  color: rgb(154 52 18 / var(--tw-text-opacity));
}

#root :is(.text-pink-400) {
  --tw-text-opacity: 1;
  color: rgb(244 114 182 / var(--tw-text-opacity));
}

#root :is(.text-purple-400) {
  --tw-text-opacity: 1;
  color: rgb(192 132 252 / var(--tw-text-opacity));
}

#root :is(.text-red-100) {
  --tw-text-opacity: 1;
  color: rgb(254 226 226 / var(--tw-text-opacity));
}

#root :is(.text-red-300) {
  --tw-text-opacity: 1;
  color: rgb(252 165 165 / var(--tw-text-opacity));
}

#root :is(.text-red-400) {
  --tw-text-opacity: 1;
  color: rgb(248 113 113 / var(--tw-text-opacity));
}

#root :is(.text-red-500) {
  --tw-text-opacity: 1;
  color: rgb(239 68 68 / var(--tw-text-opacity));
}

#root :is(.text-red-800) {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity));
}

#root :is(.text-transparent) {
  color: transparent;
}

#root :is(.text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

#root :is(.text-yellow-300) {
  --tw-text-opacity: 1;
  color: rgb(253 224 71 / var(--tw-text-opacity));
}

#root :is(.text-yellow-400) {
  --tw-text-opacity: 1;
  color: rgb(250 204 21 / var(--tw-text-opacity));
}

#root :is(.text-yellow-500) {
  --tw-text-opacity: 1;
  color: rgb(234 179 8 / var(--tw-text-opacity));
}

#root :is(.placeholder-gray-400)::placeholder {
  --tw-placeholder-opacity: 1;
  color: rgb(156 163 175 / var(--tw-placeholder-opacity));
}

#root :is(.opacity-5) {
  opacity: 0.05;
}

#root :is(.opacity-50) {
  opacity: 0.5;
}

#root :is(.shadow-lg) {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#root :is(.shadow-md) {
  --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color), 0 2px 4px -2px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#root :is(.shadow-sm) {
  --tw-shadow: 0 1px 2px 0 rgb(0 0 0 / 0.05);
  --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#root :is(.shadow-xl) {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#root :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

#root :is(.backdrop-blur-sm) {
  --tw-backdrop-blur: blur(4px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

#root :is(.transition) {
  transition-property: color, background-color, border-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#root :is(.transition-all) {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#root :is(.transition-colors) {
  transition-property: color, background-color, border-color, fill, stroke, -webkit-text-decoration-color;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, -webkit-text-decoration-color;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#root :is(.transition-transform) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#root :is(.duration-200) {
  transition-duration: 200ms;
}

#root :is(.duration-300) {
  transition-duration: 300ms;
}

#root :is(.ease-in-out) {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

#root :is(.hover\:scale-105:hover) {
  --tw-scale-x: 1.05;
  --tw-scale-y: 1.05;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#root :is(.hover\:border-gray-600:hover) {
  --tw-border-opacity: 1;
  border-color: rgb(75 85 99 / var(--tw-border-opacity));
}

#root :is(.hover\:bg-blue-500\/20:hover) {
  background-color: rgb(59 130 246 / 0.2);
}

#root :is(.hover\:bg-blue-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(29 78 216 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-gray-100:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-gray-200:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(229 231 235 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-gray-50:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(249 250 251 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-gray-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(75 85 99 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-gray-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(55 65 81 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-gray-700\/50:hover) {
  background-color: rgb(55 65 81 / 0.5);
}

#root :is(.hover\:bg-gray-800:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(31 41 55 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-gray-800\/50:hover) {
  background-color: rgb(31 41 55 / 0.5);
}

#root :is(.hover\:bg-green-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(22 163 74 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-green-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(21 128 61 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-orange-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(194 65 12 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-purple-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(126 34 206 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-red-600:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-red-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(185 28 28 / var(--tw-bg-opacity));
}

#root :is(.hover\:bg-yellow-700:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(161 98 7 / var(--tw-bg-opacity));
}

#root :is(.hover\:text-cyan-300:hover) {
  --tw-text-opacity: 1;
  color: rgb(103 232 249 / var(--tw-text-opacity));
}

#root :is(.hover\:text-white:hover) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

#root :is(.hover\:shadow-xl:hover) {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color), 0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

#root :is(.focus\:outline-none:focus) {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

#root :is(.focus\:ring-2:focus) {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

#root :is(.focus\:ring-blue-500:focus) {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(59 130 246 / var(--tw-ring-opacity));
}

#root :is(.group:hover .group-hover\:block) {
  display: block;
}

#root :is(.group:hover .group-hover\:translate-x-1) {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#root :is(.group:hover .group-hover\:text-blue-400) {
  --tw-text-opacity: 1;
  color: rgb(96 165 250 / var(--tw-text-opacity));
}

@media (min-width: 640px) {
  #root :is(.sm\:px-6) {
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }
}

@media (min-width: 768px) {
  #root :is(.md\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  #root :is(.md\:flex) {
    display: flex;
  }

  #root :is(.md\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  #root :is(.md\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  #root :is(.md\:grid-cols-4) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  #root :is(.md\:flex-row) {
    flex-direction: row;
  }

  #root :is(.md\:items-center) {
    align-items: center;
  }

  #root :is(.md\:justify-between) {
    justify-content: space-between;
  }

  #root :is(.md\:space-y-0 > :not([hidden]) ~ :not([hidden])) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }
}

@media (min-width: 1024px) {
  #root :is(.lg\:relative) {
    position: relative;
  }

  #root :is(.lg\:col-span-1) {
    grid-column: span 1 / span 1;
  }

  #root :is(.lg\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  #root :is(.lg\:hidden) {
    display: none;
  }

  #root :is(.lg\:translate-x-0) {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  #root :is(.lg\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  #root :is(.lg\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  #root :is(.lg\:grid-cols-4) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  #root :is(.lg\:grid-cols-6) {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  #root :is(.lg\:px-8) {
    padding-left: 2rem;
    padding-right: 2rem;
  }
}

@media (min-width: 1280px) {
  #root :is(.xl\:col-span-2) {
    grid-column: span 2 / span 2;
  }

  #root :is(.xl\:grid-cols-2) {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  #root :is(.xl\:grid-cols-3) {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}